set(Solver_SRC_H ../Include/header.h ../Include/state.h ../Include/utilities.h ../Include/math_util.h)
set(Class_SRC Solver.h ../Include/Simulation_Parameters.h ../Include/Simulation_Parameters.cpp ../Include/node_combination.h ../Include/node_combination.cpp)
set(Laplace_SRC Pseudo_Laplace/Pseudo_Laplacian.h Pseudo_Laplace/Pseudo_Laplacian.cpp)
set(Static_SRC Static_Solver/Static_Solver.h Static_Solver/Static_Solver.cpp)
set(Static_Parallel_SRC Static_Solver_Parallel/Static_Solver_Parallel.h Static_Solver_Parallel/Static_Solver_Parallel.cpp)
set(Parallel_Nonlinear_SRC Parallel_Nonlinear_Solver/Parallel_Nonlinear_Solver.h Parallel_Nonlinear_Solver/Parallel_Nonlinear_Solver.cpp)
set(Solver_SRC_CXX main.cpp Solver.cpp ../Include/math_util.cpp)

include_directories(../Include)
include_directories(Static_Solver)
include_directories(Static_Solver_Parallel)
include_directories(Parallel_Nonlinear_Solver)
include_directories(Pseudo_Laplace)
include_directories(../MATAR/src)

INCLUDE_DIRECTORIES (${Trilinos_INCLUDE_DIRS} ${Trilinos_TPL_INCLUDE_DIRS})
LINK_DIRECTORIES (${Trilinos_LIBRARY_DIRS} ${Trilinos_TPL_LIBRARY_DIRS})

add_executable(main ${Solver_SRC_CXX} ${Solver_SRC_H} ${Class_SRC} ${Laplace_SRC} ${Static_SRC} ${Static_Parallel_SRC} ${Parallel_Nonlinear_SRC})

target_link_libraries (main swage)
target_link_libraries (main elements)
target_link_libraries (main matar)
target_include_directories(main PRIVATE ${MPI_CXX_INCLUDE_PATH} ${MPI_Fortran_INCLUDE_PATH})
target_compile_options (main PRIVATE ${CMAKE_CXX_COMPILE_FLAGS})
target_link_libraries (main ${MPI_CXX_LIBRARIES} ${MPI_CXX_LINK_FLAGS} ${MPI_Fortran_LIBRARIES} ${MPI_Fortran_LINK_FLAGS} ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
#target_link_libraries(main /usr/lib/gcc/x86_64-linux-gnu/9/libgfortran.a)
target_link_libraries(main /mnt/c/Scalapack/scalapack/build/libscalapack.a)
target_link_libraries(main /mnt/c/Scalapack/scalapack/build/libblacs.a)
#set_property(TARGET main PROPERTY LINKER_LANGUAGE Fortran)

add_definitions(-DHAVE_KOKKOS=1 -DTRILINOS_INTERFACE=1)
